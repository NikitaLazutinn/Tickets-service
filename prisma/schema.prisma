generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  avatar     String?
  roleId     Int
  role       Role      @relation(fields: [roleId], references: [id])
  isVerified Boolean   @default(false)
  resetToken String?   
  resetTokenExpires DateTime?
  events     Event[]   @relation("EventCreator") 
  promoCodes PromoCode[]
  tickets    Ticket[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}


model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique 
  description String
  users       User[]
}


model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  location    String
  date        DateTime
  creatorId   Int       
  creator     User      @relation("EventCreator", fields: [creatorId], references: [id], onDelete: Cascade)
  tickets     Ticket[]  

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}



model PromoCode {
  id          Int       @id @default(autoincrement())
  code        String    @unique
  discount    Float     
  expiration  DateTime
  userId      Int?      
  user        User?     @relation(fields: [userId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Ticket {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  eventId     Int
  event       Event     @relation(fields: [eventId], references: [id])
  seatNumber  String
  price       Float

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
